import pytest
from nova_poshta_tracker import NovaPoshtaTracker

@pytest.fixture(scope="module")
def tracker():
    """–§—ñ–∫—Å—Ç—É—Ä–∞ –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ç—Ä–µ–∫–µ—Ä–∞ –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–º –∑–∞–∫—Ä–∏—Ç—Ç—è–º –±—Ä–∞—É–∑–µ—Ä–∞."""
    instance = NovaPoshtaTracker(headless=True)
    yield instance
    instance.close_browser()


# –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ: (–Ω–æ–º–µ—Ä –Ω–∞–∫–ª–∞–¥–Ω–æ—ó, –æ—á—ñ–∫—É–≤–∞–Ω–∏–π —Å—Ç–∞—Ç—É—Å)
test_data = [
    ("12345678901230", "–ù–æ–º–µ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"),
    ("00000000000000", "–ù–æ–º–µ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"),
]


@pytest.mark.parametrize("tracking_number, expected_status", test_data)
def test_get_package_status(tracker: NovaPoshtaTracker, tracking_number: str, expected_status: str):
    print(f"\nüîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¢–¢–ù: {tracking_number}")
    actual_status = tracker.get_package_status(tracking_number)

    print(f"‚úÖ –û—á—ñ–∫—É–≤–∞–Ω–∏–π —Å—Ç–∞—Ç—É—Å: '{expected_status}'")
    print(f"üì¶ –û—Ç—Ä–∏–º–∞–Ω–∏–π —Å—Ç–∞—Ç—É—Å:  '{actual_status}'")

    assert actual_status == expected_status, (
        f"‚ùå –ü–æ–º–∏–ª–∫–∞: –¥–ª—è –¢–¢–ù '{tracking_number}' –æ—á—ñ–∫—É–≤–∞–≤—Å—è —Å—Ç–∞—Ç—É—Å '{expected_status}', –∞–ª–µ –æ—Ç—Ä–∏–º–∞–Ω–æ '{actual_status}'"
    )
