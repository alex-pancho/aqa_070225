
pipeline {
    agent any

    environment {
        GIT_CREDENTIALS = credentials('git-credentials-id')
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Отримання коду з репозиторію...'
                git credentialsId: "${GIT_CREDENTIALS}", url: 'https://github.com/FoxKing-afk/aqa_070225'
            }
        }

        stage('Build and Test') {
            steps {
                sh '''
                    echo "Створення віртуального середовища..."
                    python3 -m venv venv
                    echo "Активація середовища, встановлення залежностей та запуск тестів..."
                    # Усі команди виконуються в одній оболонці для збереження контексту venv
                    . venv/bin/activate                   
                    pip install --upgrade pip
                    pip install -r requirements.txt                   
                    echo "Запуск тестів..."
                    # <<< РЕКОМЕНДАЦІЯ: Явно вказуємо папку з тестами
                    pytest tests/ --junitxml=test-reports/results.xml
                '''
            }
        }
    }   

    post {
        always {
            echo 'Завершення пайплайну. Збір результатів та надсилання звіту...'
            echo 'Публікація звіту про тестування...'
            junit 'test-reports/results.xml'
            echo 'Надсилання email-сповіщення...'
            emailext (
                to: 'lisitsarost@gmail.com',
                subject: "Jenkins: ${currentBuild.fullDisplayName} - ${currentBuild.currentResult}",
                body: """<p>Результати збірки: ${env.JOB_NAME} #${env.BUILD_NUMBER}</p>
                        <p>Статус: <b>${currentBuild.currentResult}</b></p>
                        <p>Переглянути деталі: <a href="${env.BUILD_URL}">${env.BUILD_URL}</a></p>
                        <p>Переглянути звіт по тестам: <a href="${env.BUILD_URL}testReport/">${env.BUILD_URL}testReport/</a></p>""",
                mimeType: 'text/html',
                attachLog: true
            )
        }
    }
}